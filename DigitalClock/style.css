/* Universal selector to reset default padding and margin for all elements */
* {
    padding: 0;
    margin: 0;
    user-select: none;
    /* Disables text selection for all elements */
}

/* Styling for the body element */
body {
    display: grid;
    /* Uses CSS Grid layout to align content */
    place-items: center;
    /* Centers content both horizontally and vertically */
    height: 100vh;
    /* Sets the height to 100% of the viewport height */
    background-color: rgb(27, 28, 30);
    /* Sets a dark background color */
}

/* Styling for button elements */
button {
    display: grid;
    /* Uses CSS Grid layout for internal alignment */

    padding: 10px 20px;
    /* Adds padding inside the button */
    cursor: pointer;
    /* Changes the cursor to a pointer when hovering over the button */
    background-color: transparent;
    /* Makes the button background transparent */
    border: 1px solid rgb(51, 51, 60);
    /* Sets the border color */
    border-radius: 20px;
    /* Rounds the corners of the button */
    color: white;
    /* Sets the text color to white */
    overflow: hidden;
    /* Ensures that content exceeding the button size is not visible */
    font-family: monospace;
    /* Sets the font family to monospace */
    font-size: 1.2rem;
    /* Sets the font size */
    z-index: 1;
    /* Sets the stack order of the button */
    font-weight: bold;
    /* Makes the button text bold */
    position: relative;
    /* Enables the use of positioning for pseudo-elements */
}

/* Adds a hover effect to button elements */
button:hover {
    background-color: rgb(51, 51, 60);
    /* Changes the background color on hover */
}

/* Styling for the pseudo-element after button */
button:after {
    content: '';
    /* Required for pseudo-elements, but no content is added */
    place-self: center;
    /* Centers the pseudo-element */
    width: 0px;
    /* Initial width set to 0 */
    background-color: rgb(19, 18, 21);
    /* Sets the background color */
    z-index: -1;
    /* Positions the pseudo-element behind the button */
    height: 0px;
    /* Initial height set to 0 */
    border-radius: 50%;
    /* Creates a circular shape */
    position: absolute;
    /* Positions the pseudo-element absolutely within the button */
    transition: 0.3s;
    /* Adds a transition effect for smooth animation */
}

/* Styling for the pseudo-element after button when active */
button:active::after {
    width: 200px;
    /* Expands the width during the active state */
    height: 200px;
    /* Expands the height during the active state */
}

/* Animation classes for the button pseudo-element */
.animateFromRight::after {
    right: -200px;
    /* Starts the animation from the right */
    width: 200px;
    /* Sets the width */
    height: 200px;
    /* Sets the height */
}

.animateFromRight:active::after {
    right: 0px;
    /* Moves the pseudo-element to its final position */
}

.animateFromLeft::after {
    width: 200px;
    /* Sets the width */
    height: 200px;
    /* Sets the height */
    left: -200px;
    /* Starts the animation from the left */
}

.animateFromLeft:active::after {
    left: 0px;
    /* Moves the pseudo-element to its final position */
}

/* Styling for the Time-container class */
.Time-container {
    width: auto;
    /* Automatically adjusts the width */
    height: 50px;
    /* Sets a fixed height */
    padding: 5px;
    /* Adds padding inside the container */
    display: flex;
    /* Uses Flexbox for layout */
    overflow: hidden;
    /* Hides content that overflows the container */
    background-color: #1e1f22;
    /* Sets the background color */
    border-radius: 5px;
    /* Rounds the corners */
    color: white;
    /* Sets the text color to white */
    font-size: 30px;
    /* Sets the font size */
    font-family: sans-serif;
    /* Sets the font family to sans-serif */
}

/* Styling for list items within the Time-container */
.Time-container li {
    list-style-type: none;
    /* Removes the default list item marker */
    height: 100%;
    /* Sets the height to fill the container */
    display: grid;
    /* Uses CSS Grid for layout */
    place-items: center;
    /* Centers content */
    padding: 0px 10px;
    /* Adds horizontal padding */
    transition-duration: 0.3s;
    /* Adds a transition effect for smooth animation */
}

/* Styling for the colon class within the Time-container */
.Time-container .colon {
    font-size: 30px;
    /* Sets the font size */
    display: grid;
    /* Uses CSS Grid for layout */
    place-items: center;
    /* Centers content */
    font-weight: 800;
    /* Makes the colon bold */
}

/* Styling for list items within the digit class */
.digit li {
    position: relative;
    /* Enables the use of positioning */
}